name: pr
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]
jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ~/.rustup
          /usr/local/cargo
          target/
          opt/tibco/ems
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install EMS
      env:
        TIB_VERSION: 10.2.1
        TIB_SHORT: 10.2
        SJCDPTPG: ${{ secrets.SJCDPTPG }}
      run: |
        echo "EMS_HOME=opt/tibco/ems/${{ env.TIB_SHORT}}" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=opt/tibco/ems/${{ env.TIB_SHORT}}/lib:opt/tibco/ems/${{ env.TIB_SHORT}}/:opt/tibco/ems/${{ env.TIB_SHORT}}/lib/64:$LD_LIBRARY_PATH" >> $GITHUB_ENV
        [ -d opt/tibco/ems ] && echo "Tibco libs loaded from cache" && exit
        curl -O 'https://edownloads.tibco.com/Installers/tap/EMS-CE/${{ env.TIB_VERSION }}/TIB_ems-ce_${{ env.TIB_VERSION }}_linux_x86_64.zip?SJCDPTPG=${{ env.SJCDPTPG }}&ext=.zip'
        unzip TIB*
        tar vxzf TIB_ems-ce_${{ env.TIB_VERSION }}/tar/TIB_ems-ce_${{ env.TIB_VERSION }}_linux_x86_64-c_dev_kit.tar.gz
        tar vxzf TIB_ems-ce_${{ env.TIB_VERSION }}/tar/TIB_ems-ce_${{ env.TIB_VERSION }}_linux_x86_64-c_dotnet_client.tar.gz
        tar vxzf TIB_ems-ce_${{ env.TIB_VERSION }}/tar/TIB_ems-ce_${{ env.TIB_VERSION }}_linux_x86_64-thirdparty.tar.gz
        rm -rvf TIB*
    - name: Install Rust
      run: rustup update stable
    - name: Run rustfmt
      run: cargo fmt --all -- --check
    - name: Run clippy
      run: cargo clippy --all -- -D warnings
    - uses: taiki-e/install-action@nextest
    - name: Cargo Test
      run: cargo nextest run --features default,streaming,tracing --no-fail-fast
    - name: merge
      if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
      run: |
        gh pr merge --merge $GITHUB_HEAD_REF
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
